---

- name: Make authelia directory.
  file:
    path: "{{ volumes_root }}/authelia"
    state: directory

- name: Copy authelia docker-compose.yml file into place.
  template:
    src: docker-compose.authelia.yml.j2
    dest: "{{ volumes_root }}/authelia/docker-compose.yml"
  vars:
    tor_domain: "{{ tor_http_domain_file.stdout | default('') }}"

- name: Check if userdb.yml exists.
  stat:
    path: "{{ volumes_root }}/authelia/userdb.yml"
  register: userdb

- name: Generate new argon2id compatible password.
  shell: >
    docker run --rm authelia/authelia:latest authelia hash-password {{default_password}} | awk '{print $3}'
  register: authelia_hash
  become: false
  when: not userdb.stat.exists

- name: Copy userdb.yml file into place.
  template:
    src: userdb.yml.j2
    dest: "{{ volumes_root }}/authelia/userdb.yml"
  vars:
    authelia_hash: "{{ authelia_hash.stdout }}"
  when: not userdb.stat.exists

- name: Copy authelia_config.yml file into place.
  template:
    src: authelia_config.yml.j2
    dest: "{{ volumes_root }}/authelia/authelia_config.yml"
  vars:
    domain_parts: "{{ domain.split('.') }}"

- name: Copy authelia_config-tor.yml file into place.
  template:
    src: authelia_config-tor.yml.j2
    dest: "{{ volumes_root }}/authelia/authelia_config-tor.yml"
  vars:
    domain_parts: "{{ domain.split('.') }}"

- name: Configure authelia systemd service.
  template:
    src: service.j2
    dest: /etc/systemd/system/authelia.service

- name: Start authelia
  systemd:
    name: authelia
    enabled: "yes"
    daemon-reload: "yes"
    state: started

- debug:
    msg:
      - "Authelia redirects to {{ authelia.redirect_url }}"
      - "You can change this by setting the authelia.redirect_url setting to the one of your own choice."
      - "Example: ./set_setting authelia.redirect_service https://heimdall.example.com"
