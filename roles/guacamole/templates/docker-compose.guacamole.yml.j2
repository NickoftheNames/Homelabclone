---
version: '3'

networks:
  traefik_network:
    external:
      name: homelabos_traefik
  guacamole:

services:

  init-guacamole-db:
    image: guacamole/guacamole:{{ guacamole.version }}
    command: ["/bin/sh", "-c", "test -e /init/initdb.sql && echo 'init file already exists' || /opt/guacamole/bin/initdb.sh --postgres > /init/initdb.sql" ]
    volumes:
      - "{{ volumes_root }}/guacamole/dbinit:/init"

  guacpostgres:
    networks:
      - guacamole
    image: postgres:{{ guacamole.db_version }}
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/guacamole/dbinit:/docker-entrypoint-initdb.d"
      - "{{ volumes_root }}/guacamole/dbdata:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: guacpostgress
      POSTGRES_PASSWORD: "{{lookup('password', './settings/passwords/postgres_password chars=ascii_letters')}}"
    depends_on:
      - init-guacamole-db

  guacd:
    networks:
      - guacamole
    image: guacamole/guacd:{{ guacamole.proxy_version }}
    restart: unless-stopped

  guac:
    image: guacamole/guacamole:{{ guacamole.version }}
    networks:
      - traefik_network
      - guacamole
    restart: unless-stopped
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_HOSTNAME: guacpostgres
      POSTGRES_DATABASE: guacpostgress
      POSTGRES_USER: guacpostgress
      POSTGRES_PASSWORD: "{{lookup('password', './settings/passwords/postgres_password chars=ascii_letters')}}"
    depends_on:
      - guacpostgres
      - guacd
    labels:
      - "traefik.http.services.guacamole.loadbalancer.server.scheme=http"
      - "traefik.http.services.guacamole.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.add-guacamole.addprefix.prefix=/guacamole"
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.routers.{{ service_item }}-http.service={{ service_item }}"
      - "traefik.http.routers.{{ service_item }}-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}-http.entrypoints=http"
      - "traefik.http.routers.{{ service_item }}-http.middlewares={% if https_only == True %}redirect@file, {% else %}{% if auth == True %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file,add-guacamole"
      - "traefik.http.routers.{{ service_item }}.service={{ service_item }}"
      - "traefik.http.routers.{{ service_item }}.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.{{ service_item }}.entrypoints=https"
      - "traefik.http.routers.{{ service_item }}.middlewares={% if auth == True %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file,add-guacamole"
      - "traefik.http.routers.{{ service_item }}.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.{{ service_item }}.tls.certresolver=dns"
{% if custom_domain != False %}
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].main={{ service_domain }}"
{% else %}
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].main={{ domain }}"
      - "traefik.http.routers.{{ service_item }}.tls.domains[0].sans=*.{{ domain }}"
{% endif %}
{% else %}
      - "traefik.http.routers.{{  service_item }}.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.{{ service_item }}-tor-http.rule=Host(`{{ lookup('vars', service_item).subdomain }}.{{ tor_domain }}`)"
      - "traefik.http.routers.{{ service_item }}-tor-http.entrypoints=http"
      - "traefik.http.routers.{{ service_item }}-tor-http.middlewares={% if auth == True %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file,add-guacamole"
{% endif %}

